<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>IMCSI</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://imcsi.cn/"/>
  <updated>2018-03-26T03:13:46.716Z</updated>
  <id>http://imcsi.cn/</id>
  
  <author>
    <name>C S</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Lavaral使用（5）</title>
    <link href="http://imcsi.cn/2018/03/23/Lavaral%E4%BD%BF%E7%94%A8%EF%BC%885%EF%BC%89/"/>
    <id>http://imcsi.cn/2018/03/23/Lavaral使用（5）/</id>
    <published>2018-03-23T06:54:51.000Z</published>
    <updated>2018-03-26T03:13:46.716Z</updated>
    
    <content type="html"><![CDATA[<p>1,Cache的使用<br>Laravel目前支持流行的缓存后端包括Memcached和Redis等，下面说的是数据库缓存：</p><p>使用database缓存驱动时，你需要设置一张表包含缓存缓存项。下面是该表的Schema声明：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Schema::create(<span class="string">'cache'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</span><br><span class="line">$table-&gt;string(<span class="string">'key'</span>)-&gt;unique();</span><br><span class="line">$table-&gt;text(<span class="string">'value'</span>);</span><br><span class="line">$table-&gt;integer(<span class="string">'expiration'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>首先创建表迁移：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:migration create_cache_table</span><br></pre></td></tr></table></figure></p><p>再将表迁移内容替换进去，就是第一段替换</p><p>执行表迁移：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS E:\wamp\www\blog&gt; php artisan migrate</span><br><span class="line">Migrating: <span class="number">2018</span>_03_22_160436_create_cache_table</span><br><span class="line">Migrated:  <span class="number">2018</span>_03_22_160436_create_cache_table</span><br></pre></td></tr></table></figure></p><p>那么就可以使用数据库缓存了</p><p>在需要使用的控制器里使用：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Cache</span>；</span><br></pre></td></tr></table></figure></p><p>比如要将文章的详情页存入到数据库缓存，并且在没有该详情页缓存的时候添加进去：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">($id)</span> </span>&#123;</span><br><span class="line">$result[<span class="string">'result'</span>] = Cache::remember(<span class="string">'news_'</span> . $id, <span class="number">10060</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> <span class="title">use</span> <span class="params">($id)</span> </span>&#123;<span class="comment">//news_$id用于区分不同的文章详情，10060表示缓存时间，单位分，</span></span><br></pre></td></tr></table></figure></p><pre><code>后面是缓存内容，使用闭包函数use连接文章id调用模型来获取数据</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> Index::where(<span class="string">'id'</span>, $id)-&gt;first();</span><br><span class="line">&#125;);</span><br><span class="line">    </span><br><span class="line">$result[<span class="string">'category_id'</span>] = $result[<span class="string">'result'</span>][<span class="string">'category_id'</span>];</span><br><span class="line">    </span><br><span class="line"><span class="keyword">return</span> view(<span class="string">'home.index.show'</span>, $result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Cache的remember方法第一个参数代表的是缓存的key，第二个参数代表缓存的时间，第三个参数表示的是在没有该key的情况下设置的默认值，该参数支持闭包函数。</p><p>你也可使用remember和forever方法：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$value = Cache::rememberForever(<span class="string">'news_'</span> . $id,<span class="function"><span class="keyword">function</span> <span class="params">()</span> <span class="title">use</span> <span class="params">($id)</span> </span>&#123; <span class="keyword">return</span> Index::where(<span class="string">'id'</span>, $id)-&gt;first();&#125;);</span><br></pre></td></tr></table></figure></p><p>来永久缓存数据。</p><p>扩展：比如一些导航栏是每个页面都要获取，我们也可以将其加入到缓存中：</p><p>在之前的文章里，公用的数据我们都放在app/Providers/目录下的服务提供者文件里统一加载数据。</p><p>首先在服务提供者的文件里：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//基于闭包的composer</span></span><br><span class="line">view()-&gt;composer(<span class="string">'layouts.home'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($view)</span> </span>&#123;</span><br><span class="line">$config = DB::table(<span class="string">'config'</span>)<span class="comment">//获取网站的全局配置参数，如客服电话，公司地址等。。</span></span><br><span class="line">-&gt;where(<span class="string">'id'</span>, <span class="number">1</span>)</span><br><span class="line">-&gt;first();</span><br><span class="line">$banner = DB::table(<span class="string">'image'</span>)</span><br><span class="line">-&gt;where(<span class="string">'is_see'</span>, <span class="number">1</span>)</span><br><span class="line">-&gt;get();</span><br><span class="line">$view-&gt;with(<span class="string">'config'</span>, $config)-&gt;with(<span class="string">'banner'</span>, $banner);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>将站点配置$config和$banner加入到缓存中：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//基于闭包的composer</span></span><br><span class="line">view()-&gt;composer(<span class="string">'layouts.home'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($view)</span> </span>&#123;</span><br><span class="line">$config = Cache::remember(<span class="string">'config'</span>, <span class="number">10060</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;<span class="comment">//获取key=config的数据，如果没有则使用闭包函数从数据库获取并存入缓存</span></span><br><span class="line"><span class="keyword">return</span> DB::table(<span class="string">'config'</span>)-&gt;where(<span class="string">'id'</span>, <span class="number">1</span>)-&gt;first();</span><br><span class="line">&#125;);</span><br><span class="line">$banner = Cache::remember(<span class="string">'banner'</span>, <span class="number">10060</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> DB::table(<span class="string">'image'</span>)-&gt;where(<span class="string">'is_see'</span>, <span class="number">1</span>)-&gt;get();</span><br><span class="line">&#125;);</span><br><span class="line">$view-&gt;with(<span class="string">'config'</span>, $config)-&gt;with(<span class="string">'banner'</span>, $banner);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>那么在第一次访问的时候借用laravel-debugbar调试器是这样的：</p><p><img src="https://i.imgur.com/UGjLq7y.png" alt=""></p><p>当第二次访问的时候：</p><p><img src="https://i.imgur.com/1nivQRB.png" alt=""></p><p>因为之前的全局数据以及文章详情都存入到了缓存中，所以没有查询数据库。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1,Cache的使用&lt;br&gt;Laravel目前支持流行的缓存后端包括Memcached和Redis等，下面说的是数据库缓存：&lt;/p&gt;
&lt;p&gt;使用database缓存驱动时，你需要设置一张表包含缓存缓存项。下面是该表的Schema声明：&lt;br&gt;&lt;figure class=&quot;h
      
    
    </summary>
    
      <category term="PHP" scheme="http://imcsi.cn/categories/PHP/"/>
    
    
      <category term="laravel" scheme="http://imcsi.cn/tags/laravel/"/>
    
      <category term="cache" scheme="http://imcsi.cn/tags/cache/"/>
    
  </entry>
  
  <entry>
    <title>Lavaral使用（4）</title>
    <link href="http://imcsi.cn/2018/03/23/Lavaral%E4%BD%BF%E7%94%A8%EF%BC%884%EF%BC%89/"/>
    <id>http://imcsi.cn/2018/03/23/Lavaral使用（4）/</id>
    <published>2018-03-23T06:54:47.000Z</published>
    <updated>2018-03-26T03:11:43.055Z</updated>
    
    <content type="html"><![CDATA[<p>1.多视图共享数据<br>如题，如果我们有一些固定的网站内容，如联系方式，客服扣扣等，需要放在公用视图模板的头部或底部，如这样：</p><p>在home.blade.php中<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;手机：&#123;&#123;$config-&gt;linktel&#125;&#125; 丨 邮箱：&#123;&#123;$config-&gt;linkemail&#125;&#125; 丨 地址：&#123;&#123;$config-&gt;linkadress&#125;&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure></p><p>怎样在每个视图中都加载这些内容呢。</p><p>1.直接使用View::share()方法来在每个视图层加载固定内容</p><p>首先使用Artisan创建服务提供者<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:provider ComposerServiceProvider</span><br></pre></td></tr></table></figure></p><p>然后在config/app.php里注册提供者。在providers里加入：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'providers'</span> =&gt; [</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">         * Laravel Framework Service Providers...</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Illuminate\Auth\AuthServiceProvider::class,</span><br><span class="line">Illuminate\Broadcasting\BroadcastServiceProvider::class,</span><br><span class="line">........</span><br><span class="line">App\Providers\RouteServiceProvider::class,</span><br><span class="line">App\Providers\ComposerServiceProvider::class,<span class="comment">//加入刚刚创建的提供者</span></span><br><span class="line">Stevenyangecho\UEditor\UEditorServiceProvider::class,</span><br><span class="line">],</span><br></pre></td></tr></table></figure></p><p>然后在注册的提供者里面加入：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">View::share(<span class="string">'abc'</span>,<span class="string">'beeasy'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这是使用外观模式，也可以直接使用view()方法，<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view()-&gt;share(<span class="string">'abc'</span>, <span class="string">'beeasy'</span>);</span><br></pre></td></tr></table></figure></p><p>这样在视图层里面就能直接使用<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;$abc&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>2.使用Composer单独对某个视图闭包来完成<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//基于闭包的composer</span></span><br><span class="line">view()-&gt;composer(<span class="string">'layouts.home'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($view)</span> </span>&#123;<span class="comment">//绑定公用视图的前端页面</span></span><br><span class="line">$config = DB::table(<span class="string">'config'</span>)</span><br><span class="line">-&gt;where(<span class="string">'id'</span>, <span class="number">1</span>)</span><br><span class="line">-&gt;first();</span><br><span class="line">$view-&gt;with(<span class="string">'config'</span>, $config);<span class="comment">//将数据载入到视图</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这样就能在layouts/home.blade.php视图下直接使用config变量了</p><p>当然你也可以这样写：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//基于闭包的composer</span></span><br><span class="line">view()-&gt;composer(*, <span class="function"><span class="keyword">function</span> <span class="params">($view)</span> </span>&#123;<span class="comment">//绑定公用视图的前端页面</span></span><br><span class="line">$config = DB::table(<span class="string">'config'</span>)</span><br><span class="line">-&gt;where(<span class="string">'id'</span>, <span class="number">1</span>)</span><br><span class="line">-&gt;first();</span><br><span class="line">$view-&gt;with(<span class="string">'config'</span>, $config);<span class="comment">//将数据传递到视图</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这样就能达到第一种方法的效果</p><p>两种方法的区别：第一种方法是在每个视图层都传递数据，而第二种是针对某个视图层来传递数据，具体的选择方法还是要根据具体情况来定。</p><p>2.安装laravel-debugbar来提高开发效率<br>1). 使用 Composer 安装该扩展包：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer <span class="keyword">require</span> barryvdh/laravel-debugbar</span><br></pre></td></tr></table></figure></p><p>2). 安装完成后，修改 config/app.php 在 providers 数组内追加 Debugbar 的 Provider<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'providers'</span> =&gt; [</span><br><span class="line">...</span><br><span class="line">Barryvdh\Debugbar\ServiceProvider::class,</span><br><span class="line">],</span><br></pre></td></tr></table></figure></p><p>同时在 aliases 数组内追加如下内容<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'aliases'</span> =&gt; [</span><br><span class="line">...</span><br><span class="line"><span class="string">'Debugbar'</span> =&gt; Barryvdh\Debugbar\Facade::class,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>3). 接下来运行以下命令生成此扩展包的配置文件 config/debugbar.php：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan vendor:publish --provider=<span class="string">"Barryvdh\Debugbar\ServiceProvider"</span></span><br></pre></td></tr></table></figure></p><p>打开 config/debugbar.php，将 enabled 的值设置为：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'enabled'</span> =&gt; env(<span class="string">'APP_DEBUG'</span>, <span class="keyword">false</span>),</span><br></pre></td></tr></table></figure></p><p>修改完以后, Debugbar 分析器的启动状态将由 .env文件中 APP_DEBUG 值决定。</p><p>页面刷新后, 看到下图即表示运行成功。</p><p><img src="https://i.imgur.com/1ImUL0w.png" alt=""></p><p>原文地址：<a href="https://laravel-china.org/topics/2531" target="_blank" rel="noopener">https://laravel-china.org/topics/2531</a></p><p>关闭功能只需要在debugbar.php文件中，将<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'enabled'</span> =&gt; env(<span class="string">'APP_DEBUG'</span>, <span class="keyword">false</span>),</span><br></pre></td></tr></table></figure></p><p>改为<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'enabled'</span> =&gt; env(<span class="string">'DEBUGBAR_ENABLED'</span>, <span class="keyword">false</span>),</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.多视图共享数据&lt;br&gt;如题，如果我们有一些固定的网站内容，如联系方式，客服扣扣等，需要放在公用视图模板的头部或底部，如这样：&lt;/p&gt;
&lt;p&gt;在home.blade.php中&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
      <category term="PHP" scheme="http://imcsi.cn/categories/PHP/"/>
    
    
      <category term="laravel" scheme="http://imcsi.cn/tags/laravel/"/>
    
      <category term="debugbar" scheme="http://imcsi.cn/tags/debugbar/"/>
    
  </entry>
  
  <entry>
    <title>Lavaral使用（3）</title>
    <link href="http://imcsi.cn/2018/03/23/Lavaral%E4%BD%BF%E7%94%A8%EF%BC%883%EF%BC%89/"/>
    <id>http://imcsi.cn/2018/03/23/Lavaral使用（3）/</id>
    <published>2018-03-23T06:54:43.000Z</published>
    <updated>2018-03-26T03:09:49.344Z</updated>
    
    <content type="html"><![CDATA[<p>1.图片上传<br>直接上代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">DB</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Storage</span>;<span class="comment">//使用到的类</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">(Request $request, $id)</span> </span>&#123;<span class="comment">//</span></span><br><span class="line">$data = $request-&gt;except(<span class="string">'_token'</span>);<span class="comment">//获取表单中除token外的所有数值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$request-&gt;hasFile(<span class="string">'image'</span>)) &#123;<span class="comment">//判断是否有图片上传</span></span><br><span class="line">DB::table(<span class="string">'image'</span>)</span><br><span class="line">-&gt;where(<span class="string">'id'</span>, $id)</span><br><span class="line">-&gt;update($data);</span><br><span class="line"><span class="keyword">return</span> redirect(<span class="string">'admin/carousel/index'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$file = $data[<span class="string">'image'</span>];<span class="comment">//获取图片信息</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;validate($request, [<span class="comment">//图片验证</span></span><br><span class="line"><span class="string">'logo_img'</span> =&gt; <span class="string">'image|between:0,5242880'</span>,<span class="comment">//是否为图片类型，以及大小在0~5M之间</span></span><br><span class="line"></span><br><span class="line">], [</span><br><span class="line"><span class="string">'image'</span> =&gt; <span class="string">':attribute 必须为图片'</span>,</span><br><span class="line"><span class="string">'size'</span> =&gt; <span class="string">':attribute 文件大小必须小于5M'</span>,</span><br><span class="line">], [</span><br><span class="line"><span class="string">'image'</span> =&gt; <span class="string">'图片'</span>,</span><br><span class="line">]);</span><br><span class="line"><span class="comment">//判断文件是否上传成功</span></span><br><span class="line"><span class="keyword">if</span> ($file-&gt;isValid()) &#123;</span><br><span class="line"><span class="comment">//原文件名</span></span><br><span class="line">$originalName = $file-&gt;getClientOriginalName();</span><br><span class="line"><span class="comment">//扩展名</span></span><br><span class="line">$ext = $file-&gt;getClientOriginalExtension();</span><br><span class="line"><span class="comment">//MimeType</span></span><br><span class="line">$type = $file-&gt;getClientMimeType();</span><br><span class="line"><span class="comment">//临时绝对路径</span></span><br><span class="line">$realPath = $file-&gt;getRealPath();</span><br><span class="line">$filename = uniqid() . <span class="string">'.'</span> . $ext;</span><br><span class="line">$bool = Storage::disk(<span class="string">'public'</span>)-&gt;put($filename, file_get_contents($realPath));<span class="comment">//这里使用的是基于PHP的flysystem强大的文件系统抽象</span></span><br><span class="line"><span class="comment">//判断是否上传成功</span></span><br><span class="line"><span class="keyword">if</span> ($bool) &#123;</span><br><span class="line">$data[<span class="string">'image'</span>] = Storage::disk(<span class="string">'public'</span>)-&gt;url($filename);<span class="comment">//获取软连接地址</span></span><br><span class="line">DB::table(<span class="string">'image'</span>)</span><br><span class="line">-&gt;where(<span class="string">'id'</span>, $id)</span><br><span class="line">-&gt;update($data);</span><br><span class="line"><span class="keyword">return</span> redirect(<span class="string">'admin/carousel/index'</span>);<span class="comment">//存储到数据库</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> redirect()-&gt;back()-&gt;with(<span class="string">'msg'</span>, <span class="string">'请稍后再试'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们上传文件的地址其实是在 config/filesystems.php配置文件中的disk数组下public中的root地址<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'disks'</span> =&gt; [</span><br><span class="line"></span><br><span class="line"><span class="string">'local'</span> =&gt; [</span><br><span class="line"><span class="string">'driver'</span> =&gt; <span class="string">'local'</span>,</span><br><span class="line"><span class="string">'root'</span> =&gt; storage_path(<span class="string">'app'</span>),</span><br><span class="line">],</span><br><span class="line"></span><br><span class="line"><span class="string">'public'</span> =&gt; [</span><br><span class="line"><span class="string">'driver'</span> =&gt; <span class="string">'local'</span>,</span><br><span class="line"><span class="string">'root'</span> =&gt; storage_path(<span class="string">'app/public'</span>),</span><br><span class="line"><span class="string">'url'</span> =&gt; env(<span class="string">'APP_URL'</span>) . <span class="string">'/storage'</span>,</span><br><span class="line"><span class="string">'visibility'</span> =&gt; <span class="string">'public'</span>,</span><br><span class="line">],</span><br><span class="line"></span><br><span class="line"><span class="string">'s3'</span> =&gt; [</span><br><span class="line"><span class="string">'driver'</span> =&gt; <span class="string">'s3'</span>,</span><br><span class="line"><span class="string">'key'</span> =&gt; env(<span class="string">'AWS_ACCESS_KEY_ID'</span>),</span><br><span class="line"><span class="string">'secret'</span> =&gt; env(<span class="string">'AWS_SECRET_ACCESS_KEY'</span>),</span><br><span class="line"><span class="string">'region'</span> =&gt; env(<span class="string">'AWS_DEFAULT_REGION'</span>),</span><br><span class="line"><span class="string">'bucket'</span> =&gt; env(<span class="string">'AWS_BUCKET'</span>),</span><br><span class="line">],</span><br><span class="line"></span><br><span class="line">],</span><br></pre></td></tr></table></figure></p><p>因为我们指定的disks是public，所以上传的文件将存储在/storage/app/public目录下。</p><p>当以上操作成功将文件上传，我们使用Storage::disk(‘public’)-&gt;url($filename)  获取到的结果是这样的：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/storage/<span class="number">5</span>aaa3fe021b6f.png</span><br></pre></td></tr></table></figure></p><p>虽然路径看起来一目了然，但是直接拿到页面上去用并不能获取到图片。</p><p>那么我们需要创建一个软连接来将上面的链接指向到storage_path(‘app/public’)</p><p>即  /storage/app/public目录下</p><p>要创建这个软链接，直接使用Artisan命令：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan storage:link</span><br></pre></td></tr></table></figure></p><p>文件被存储并且软链已经被创建的情况下，就可以使用辅助函数 asset 创建一个指向该文件的URL：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img  src=<span class="string">"&#123;&#123; asset(‘/storage/5aaa3fe021b6f.png’) &#125;&#125;"</span>&gt;</span><br></pre></td></tr></table></figure></p><p>这种方式可以将公开访问的文件保存在一个可以很容易被不同部署环境共享的目录，在使用零停机时间部署系统如Envoyer的时候尤其方便。</p><p>关于flysystem其他的一些文件操作，可参考<a href="http://laravelacademy.org/post/6071.html" title="这里" target="_blank" rel="noopener">http://laravelacademy.org/post/6071.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.图片上传&lt;br&gt;直接上代码：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;
      
    
    </summary>
    
      <category term="PHP" scheme="http://imcsi.cn/categories/PHP/"/>
    
    
      <category term="laravel" scheme="http://imcsi.cn/tags/laravel/"/>
    
      <category term="上传" scheme="http://imcsi.cn/tags/%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>Lavaral使用（2）</title>
    <link href="http://imcsi.cn/2018/03/23/Lavaral%E4%BD%BF%E7%94%A8%EF%BC%882%EF%BC%89/"/>
    <id>http://imcsi.cn/2018/03/23/Lavaral使用（2）/</id>
    <published>2018-03-23T06:54:40.000Z</published>
    <updated>2018-03-26T03:08:04.825Z</updated>
    
    <content type="html"><![CDATA[<p>1.富文本编辑器（UEditor）<br>laravel的依赖管理工具composer中可以快速的帮助我们集成ueditor到框架中，配置过程：</p><p>在laravel项目根目录配置composer.json文件，在require中写入：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"stevenyangecho/laravel-u-editor"</span>: <span class="string">"~1.4"</span></span><br></pre></td></tr></table></figure></p><p>然后在cmd模式下输入：composer update （需要将composer配置为全局变量）<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PS E:\wamp\www\blog&gt; composer update</span><br><span class="line">Loading composer repositories with package information</span><br><span class="line">Updating dependencies (including <span class="keyword">require</span>-dev)</span><br><span class="line">Package operations: <span class="number">3</span> installs, <span class="number">31</span> updates, <span class="number">0</span> removals</span><br><span class="line"> - Updating symfony/polyfill-mbstring (v1<span class="number">.6</span><span class="number">.0</span> =&gt; v1<span class="number">.7</span><span class="number">.0</span>): Downloading (<span class="number">100</span>%)</span><br><span class="line"> - Updating symfony/<span class="keyword">var</span>-dumper (v3<span class="number">.3</span><span class="number">.13</span> =&gt; v3<span class="number">.4</span><span class="number">.6</span>): Downloading (<span class="number">100</span>%)</span><br><span class="line"> - Updating symfony/debug (v3<span class="number">.3</span><span class="number">.13</span> =&gt; v3<span class="number">.4</span><span class="number">.6</span>): Downloading (<span class="number">100</span>%)</span><br><span class="line">.......<span class="comment">//省略部分内容</span></span><br><span class="line">Package manifest generated successfully.</span><br></pre></td></tr></table></figure></p><p>更新完成之后，修改laravel的配置文件（config/app.php）:</p><p>在 “providers” 这个key 最后加上 ：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stevenyangecho\UEditor\UEditorServiceProvider::class</span><br></pre></td></tr></table></figure></p><p>在”aliases” 这个key最后加上：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'UEditor'</span>=&gt;Stevenyangecho\UEditor\UEditorServiceProvider::class</span><br></pre></td></tr></table></figure></p><p>配置完之后，命令提示符进入项目的根目录：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PS E:\wamp\www&gt; cd blog</span><br><span class="line">PS E:\wamp\www\blog&gt; php artisan vendor:publish</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  [Symfony\Component\Debug\<span class="keyword">Exception</span>\FatalThrowableError]</span><br><span class="line">  <span class="class"><span class="keyword">Class</span> '<span class="title">Stevenyangecho</span>\<span class="title">UEditor</span>\<span class="title">UEditorServiceProvider</span>' <span class="title">not</span> <span class="title">found</span></span></span><br></pre></td></tr></table></figure></p><p>提示以上的错误要确定之前的步骤是否正确：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PS E:\wamp\www\blog&gt; php artisan vendor:publish</span><br><span class="line"></span><br><span class="line"> Which provider <span class="keyword">or</span> tag<span class="string">'s files would you like to publish?:</span></span><br><span class="line"><span class="string">  [0 ] Publish files from all providers and tags listed below</span></span><br><span class="line"><span class="string">.......</span></span><br><span class="line"><span class="string"> &gt; 0//输入0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.......</span></span><br><span class="line"><span class="string">Publishing complete.</span></span><br></pre></td></tr></table></figure></p><p>出现以上信息说明已经配置完成。</p><p>一串文件下载配置之后，laravel项目的public目录下会自动建立一个laravel-u-editor的文件夹。这个文件夹里包含的是编辑器本身的JS文件。同时在config文件夹下也会生成一个名为UEditorUpload.php的文件，这个是基础的配置文件。当这些文件都生成之后，说明编辑器已经在项目中集成好了，下一步就可以在视图文件中进行注入了</p><p>前端视图中整合ue编辑器：</p><p>首先引入JS等文件，因为laravel框架已经帮我们集成好了，直接在视图文件尾部加入<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">include</span>(<span class="string">'UEditor::head'</span>) 即可</span><br></pre></td></tr></table></figure></p><p>然后加载编辑器的容器，最后实例化编辑器，这部分比较简单，直接贴代码：</p><p> 加载编辑器的容器<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"detail_info"</span>&gt;</span><br><span class="line">&lt;script id=<span class="string">"container"</span> name=<span class="string">"content"</span> type=<span class="string">"text/plain"</span> style=<span class="string">"width: 900px;position:absolute;left:300px;top:120px;"</span>&gt;</span><br><span class="line">&#123;!! html_entity_decode($article-&gt;content) !!&#125; <span class="comment">//将富文本编辑器内容转义并在页面上显示</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p> 实例化编辑器<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ue = UE.getEditor(<span class="string">'container'</span>);</span><br><span class="line">ue.ready(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; </span><br><span class="line">ue.execCommand(<span class="string">'serverparam'</span>, <span class="string">'_token'</span>, <span class="string">'&#123;&#123; csrf_token() &#125;&#125;'</span>); <span class="comment">//这里添加laravel安全token：便于数据提交</span></span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>2.表单验证<br>直接上代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">store</span><span class="params">(Request $request)</span> </span>&#123;</span><br><span class="line">$data = $request-&gt;except(<span class="string">'_token'</span>);<span class="comment">//获取除token外的所有表单数据</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;validate($request, [<span class="comment">//验证表单值</span></span><br><span class="line"><span class="string">'title'</span> =&gt; <span class="string">'requred'</span>,<span class="comment">//设置title为必填</span></span><br><span class="line"><span class="string">'content'</span> =&gt; <span class="string">'integer'</span>,<span class="comment">//设置content整数</span></span><br><span class="line"></span><br><span class="line">], [</span><br><span class="line"><span class="string">'required'</span> =&gt; <span class="string">':attribute 为必填项'</span>,<span class="comment">//自定义提示文字，默认为英文</span></span><br><span class="line"><span class="string">'min'</span> =&gt; <span class="string">':attribute 长度不符合要求'</span>,</span><br><span class="line"><span class="string">'integer'</span> =&gt; <span class="string">':attribute 必须为整数'</span>,</span><br><span class="line">], [</span><br><span class="line"><span class="string">'title'</span> =&gt; <span class="string">'标题'</span>,<span class="comment">//设置表单字段表示的含义</span></span><br><span class="line"><span class="string">'content'</span> =&gt; <span class="string">'内容'</span>,</span><br><span class="line">]);<span class="comment">//当验证未通过则自动返回表单页面，不会执行以下内容</span></span><br><span class="line">$result = DB::table(<span class="string">'news'</span>)</span><br><span class="line">-&gt;insert($data);<span class="comment">//数据插入</span></span><br><span class="line"><span class="keyword">if</span> ($result) &#123;</span><br><span class="line"><span class="keyword">return</span> redirect()-&gt;back()-&gt;with(<span class="string">'msg'</span>, <span class="string">'操作成功'</span>);<span class="comment">//插入成功，返回添加页</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> redirect()-&gt;back()-&gt;with(<span class="string">'msg'</span>, <span class="string">'操作失败'</span>)-&gt;withInput();<span class="comment">//插入失败，返回添加页并提示错误，将原表单数据返回</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在页面上显示提示：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">if</span> (count($errors) &gt; <span class="number">0</span>)<span class="comment">//$errors 变量在每次请求的所有视图中都可以被使用，你可以很方便的假设 $errors 变量已被定义且进行安全地使用。</span></span><br><span class="line">  &lt;div class="alert alert-danger"&gt;//验证未通过则返回错误信息</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      @<span class="keyword">foreach</span> ($errors-&gt;all() <span class="keyword">as</span> $error)</span><br><span class="line">        &lt;li&gt;&#123;&#123; $error &#125;&#125;&lt;/li&gt;</span><br><span class="line">      @<span class="keyword">endforeach</span></span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">@<span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line">&lt;fieldset&gt;</span><br><span class="line">    &lt;div class="form-group"&gt;</span><br><span class="line">        &lt;label class="col-sm-2 control-label"&gt;资讯标题&lt;/label&gt;</span><br><span class="line">      &#123;&#123;session(<span class="string">'success'</span>)&#125;&#125;<span class="comment">//此处返回表单验证通过后闪存中session的信息</span></span><br><span class="line">        &lt;div class="col-sm-6"&gt;</span><br><span class="line">            &lt;input value="&#123;&#123;old('title')&#125;&#125;" class="form-control" id="title" type="text" name="title"  style="width:40%;"/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>3.数据筛选和分页<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">(Request $request)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> ($request-&gt;input(<span class="string">'category_id'</span>)) &#123;<span class="comment">//判断是否带有分类id</span></span><br><span class="line">$category_id = $request-&gt;input(<span class="string">'category_id'</span>);<span class="comment">//获取分类id</span></span><br><span class="line"><span class="keyword">if</span> ($category_id == <span class="string">'all'</span>) &#123;<span class="comment">//判断是否是所有分类</span></span><br><span class="line">$news = DB::table(<span class="string">'news'</span>)</span><br><span class="line">-&gt;select(<span class="string">'id'</span>, <span class="string">'title'</span>, <span class="string">'category_id'</span>, <span class="string">'addtime'</span>)</span><br><span class="line">-&gt;orderBy(<span class="string">"id"</span>, <span class="string">"desc"</span>)</span><br><span class="line">-&gt;paginate(<span class="number">10</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;<span class="comment">//否则执行where查询单个分类</span></span><br><span class="line">$news = DB::table(<span class="string">'news'</span>)</span><br><span class="line">-&gt;select(<span class="string">'id'</span>, <span class="string">'title'</span>, <span class="string">'category_id'</span>, <span class="string">'addtime'</span>)</span><br><span class="line">-&gt;where(<span class="string">'category_id'</span>, $category_id)</span><br><span class="line">-&gt;orderBy(<span class="string">"id"</span>, <span class="string">"desc"</span>)</span><br><span class="line">-&gt;paginate(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;<span class="comment">//不带分类id则默认加上，方便在分页里调用</span></span><br><span class="line">$news = DB::table(<span class="string">'news'</span>)</span><br><span class="line">-&gt;select(<span class="string">'id'</span>, <span class="string">'title'</span>, <span class="string">'category_id'</span>, <span class="string">'addtime'</span>)</span><br><span class="line">-&gt;orderBy(<span class="string">"id"</span>, <span class="string">"desc"</span>)</span><br><span class="line">-&gt;paginate(<span class="number">10</span>);</span><br><span class="line">$category_id = <span class="string">'all'</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">$category = DB::table(<span class="string">'category'</span>)</span><br><span class="line">-&gt;get();</span><br><span class="line">$assign = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'news'</span> =&gt; $news,</span><br><span class="line"><span class="string">'category'</span> =&gt; $category,</span><br><span class="line"><span class="string">'category_id'</span> =&gt; $category_id,<span class="comment">//用于记住分类id</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">return</span> view(<span class="string">'admin.news.index'</span>, $assign);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>重点在于：</p><p>默认的分页展示写法是这样的：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;!! $news-&gt;links() !!&#125;</span><br></pre></td></tr></table></figure></p><p>那么当分页筛选成功后，点击下一页则无法按照条件筛选，因为category_id没有存入到分页的url。我们需要将分类id加入到分页url中才能记住用户选择的分类id：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;!! $news-&gt;appends(<span class="keyword">array</span>(<span class="string">'category_id'</span>=&gt;$category_id))-&gt;links() !!&#125;</span><br></pre></td></tr></table></figure></p><p>那么生成的分页url是这样的：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//www.blog.com/admin/news/index?category_id=1&amp;page=2</span></span><br></pre></td></tr></table></figure></p><p>就能记住用户选择的分类id进行where条件筛选。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.富文本编辑器（UEditor）&lt;br&gt;laravel的依赖管理工具composer中可以快速的帮助我们集成ueditor到框架中，配置过程：&lt;/p&gt;
&lt;p&gt;在laravel项目根目录配置composer.json文件，在require中写入：&lt;br&gt;&lt;figure cl
      
    
    </summary>
    
      <category term="PHP" scheme="http://imcsi.cn/categories/PHP/"/>
    
    
      <category term="laravel" scheme="http://imcsi.cn/tags/laravel/"/>
    
      <category term="UEditor" scheme="http://imcsi.cn/tags/UEditor/"/>
    
      <category term="表单验证" scheme="http://imcsi.cn/tags/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>Lavaral使用（1）</title>
    <link href="http://imcsi.cn/2018/03/23/Lavaral%E4%BD%BF%E7%94%A8%EF%BC%881%EF%BC%89/"/>
    <id>http://imcsi.cn/2018/03/23/Lavaral使用（1）/</id>
    <published>2018-03-23T06:54:18.000Z</published>
    <updated>2018-03-26T03:05:21.969Z</updated>
    
    <content type="html"><![CDATA[<p>1.ajax<br>使用ajax传递数据必须带上_token字段:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">type:<span class="string">'post'</span>,</span><br><span class="line">url:<span class="string">"&#123;&#123; url('admin/login/login')&#125;&#125; "</span>,</span><br><span class="line">data:&#123;username:username,password:password,_token:<span class="string">'&lt;?php echo csrf_token() ?&gt;'</span>&#125;,</span><br><span class="line">success:<span class="function"><span class="keyword">function</span><span class="params">(data)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(data==<span class="string">'no'</span>)&#123;</span><br><span class="line">$(<span class="string">'#success'</span>).text(<span class="string">'用户名或密码错误'</span>).css(<span class="string">'color'</span>,<span class="string">'red'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">window.location.href=<span class="string">"&#123;&#123; url('admin/login/login')&#125;&#125;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>后台返回ajax数据：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">(Request $request)</span> </span>&#123;</span><br><span class="line">$data = $request-&gt;all();</span><br><span class="line"><span class="keyword">return</span> response()-&gt;json(<span class="string">'no'</span>); <span class="comment">//ajax返回数据</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2.保存未提交成功的数据<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户登录验证</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">(Request $request)</span> </span>&#123;</span><br><span class="line">$data = $request-&gt;only(<span class="string">'name'</span>, <span class="string">'password'</span>);</span><br><span class="line"><span class="keyword">if</span> (Auth::attempt($data)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'ok'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> redirect(<span class="string">'admin/login/index'</span>)-&gt;withInput($request-&gt;except(<span class="string">'password'</span>))-&gt;with(<span class="string">'msg'</span>, <span class="string">'用户名或密码错误'</span>);</span><br><span class="line">   <span class="comment">//返回登陆页并返回除密码外的所有表单数据，添加一次性session错误提示</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>在视图页用old获取之前的数据<br> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span> value=<span class="string">"&#123;&#123; old('username') &#125;&#125;"</span>&gt;</span><br><span class="line"></span><br><span class="line"> &#123;&#123; session(<span class="string">'msg'</span>) &#125;&#125; <span class="comment">//视图层获取错误信息</span></span><br></pre></td></tr></table></figure></p><p>3.模板继承<br>比头尾分离更加人性化</p><p>制定头尾模板home.blade.php放入resouces/views/layouts/目录下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;meta name=<span class="string">"viewport"</span></span><br><span class="line">  content=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">&lt;title&gt;@<span class="keyword">yield</span>(<span class="string">'title'</span>) - BeEasy博客&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">yield</span>(<span class="string">'content'</span>)</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>其中变量用@yield()替代</p><p>视图层模板继承：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@extends(<span class="string">'layouts.home'</span>)</span><br><span class="line"></span><br><span class="line">@section(<span class="string">'title'</span>, $title);</span><br><span class="line"></span><br><span class="line">@section(<span class="string">'content'</span>)</span><br><span class="line">&lt;form action=<span class="string">"&#123;&#123; url('view/store') &#125;&#125;"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">&#123;&#123; csrf_field() &#125;&#125;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> name=<span class="string">"title"</span> value=<span class="string">""</span>&gt; &lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> name=<span class="string">"content"</span> value=<span class="string">""</span>&gt; &lt;br&gt;</span><br><span class="line">&lt;button type=<span class="string">"submit"</span>&gt;提交&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">@endsection</span><br></pre></td></tr></table></figure></p><p>其中块级元素必须有闭合标签</p><p>4.中间件<br>比如后台管理员登陆后登陆超时将返回登陆<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:middleware AdminMiddleware</span><br></pre></td></tr></table></figure></p><p>使用Artisan命令快速创建中间件</p><p>这个命令会在 app/Http/Middleware 目录下创建一个新的中间件类 Admin来检测用户是否登录<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Middleware</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Closure</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Auth</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminMiddleware</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Handle an incoming request.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  \Illuminate\Http\Request  $request</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  \Closure  $next</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">($request, Closure $next)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (Auth::guard(<span class="string">'admin'</span>)-&gt;check()) &#123;<span class="comment">//检测用户是否登录</span></span><br><span class="line"><span class="keyword">return</span> $next($request);<span class="comment">//执行登陆后的操作。可自行定制</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> redirect(<span class="string">'admin/login/index'</span>);<span class="comment">//未登录则返回登陆页</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>中间件创建成功后我们需要注册中间件，不然使用起来会特别不方便：</p><p>在 app/Http/Kernel.php 文件中<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> $routeMiddleware = [</span><br><span class="line"><span class="string">'auth'</span> =&gt; \Illuminate\Auth\Middleware\Authenticate::class,</span><br><span class="line"><span class="string">'auth.basic'</span> =&gt; \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,</span><br><span class="line"><span class="string">'bindings'</span> =&gt; \Illuminate\Routing\Middleware\SubstituteBindings::class,</span><br><span class="line"><span class="string">'can'</span> =&gt; \Illuminate\Auth\Middleware\Authorize::class,</span><br><span class="line"><span class="string">'guest'</span> =&gt; \App\Http\Middleware\RedirectIfAuthenticated::class,</span><br><span class="line"><span class="string">'throttle'</span> =&gt; \Illuminate\Routing\Middleware\ThrottleRequests::class,</span><br><span class="line"><span class="string">'logincheck'</span> =&gt; \App\Http\Middleware\logincheckMiddleware::class,</span><br><span class="line"><span class="string">'admincheck'</span> =&gt; \App\Http\Middleware\AdminMiddleware::class,<span class="comment">//给中间件设置别名，方面调用</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure></p><p>如果你想要中间件在每一个 HTTP 请求期间被执行，只需要将相应的中间件类设置到 app/Http/Kernel.php 的数组属性 $middleware 中即可。</p><p>有时候你可能想要通过指定一个键名的方式将相关中间件分到同一个组里面，从而更方便将其分配到路由中，这可以通过使用 HTTP Kernel 的 $middlewareGroups 属性实现。</p><p>那么当你将后台登陆页面和登陆成功首页写好后，如何只在登陆成功页加入中间件检测登陆，而不在登陆页加上中间件？</p><p>打开全局路由文件 routes/web.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//admin模块</span></span><br><span class="line">Route::prefix(<span class="string">'admin'</span>)-&gt;namespace(<span class="string">'admin'</span>)-&gt;group(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">Route::prefix(<span class="string">'login'</span>)-&gt;group(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">Route::get(<span class="string">'index'</span>, <span class="string">'LoginController@index'</span>);</span><br><span class="line">Route::post(<span class="string">'login'</span>, <span class="string">'LoginController@login'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">Route::group([<span class="string">'middleware'</span> =&gt; [<span class="string">'admincheck'</span>]], <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//路由中间件，检测用户是否登录</span></span><br><span class="line">Route::prefix(<span class="string">'index'</span>)-&gt;group(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">Route::get(<span class="string">'index'</span>, <span class="string">'IndexController@index'</span>);</span><br><span class="line">Route::post(<span class="string">'loginout'</span>, <span class="string">'IndexController@loginout'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>那么其他需要登陆的页面方法，将路由规则写在注释下面就可以了。</p><p>5.登陆账号密码验证<br>虽然laravel给我们提供了一套简单的用户注册登录流程，但是并不能完全满足我们的需求，比如我们管理员是在admin表，验证的是username和password。</p><p>首先需要在 /config/auth.php文件中添加：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'guards'</span> =&gt; [</span><br><span class="line"><span class="string">'web'</span> =&gt; [</span><br><span class="line"><span class="string">'driver'</span> =&gt; <span class="string">'session'</span>,</span><br><span class="line"><span class="string">'provider'</span> =&gt; <span class="string">'users'</span>,</span><br><span class="line">],</span><br><span class="line">    </span><br><span class="line"><span class="string">'api'</span> =&gt; [</span><br><span class="line"><span class="string">'driver'</span> =&gt; <span class="string">'token'</span>,</span><br><span class="line"><span class="string">'provider'</span> =&gt; <span class="string">'users'</span>,</span><br><span class="line">],</span><br><span class="line"><span class="string">'admin'</span> =&gt; [<span class="comment">//定义后台的驱动和提供</span></span><br><span class="line"><span class="string">'driver'</span> =&gt; <span class="string">'session'</span>,</span><br><span class="line"><span class="string">'provider'</span> =&gt; <span class="string">'admin'</span>,</span><br><span class="line">    </span><br><span class="line">],</span><br><span class="line">],</span><br></pre></td></tr></table></figure></p><p>添加配置<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'providers'</span> =&gt; [</span><br><span class="line"><span class="string">'users'</span> =&gt; [</span><br><span class="line"><span class="string">'driver'</span> =&gt; <span class="string">'eloquent'</span>,</span><br><span class="line"><span class="string">'model'</span> =&gt; App\User::class,</span><br><span class="line">],</span><br><span class="line">    </span><br><span class="line"><span class="string">'admin'</span> =&gt; [ <span class="comment">//后台驱动以及模型 database驱动对应的是table表单</span></span><br><span class="line"><span class="string">'driver'</span> =&gt; <span class="string">'eloquent'</span>,</span><br><span class="line"><span class="string">'model'</span> =&gt; App\Models\AdminUser::class,</span><br><span class="line">],</span><br><span class="line"><span class="comment">// 'users' =&gt; [</span></span><br><span class="line"><span class="comment">// 'driver' =&gt; 'database',</span></span><br><span class="line"><span class="comment">// 'table' =&gt; 'users',</span></span><br><span class="line"><span class="comment">// ],</span></span><br><span class="line">],</span><br></pre></td></tr></table></figure></p><p>然后我们可以通过复制App目录下User.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Auth</span>\<span class="title">User</span> <span class="title">as</span> <span class="title">Authenticatable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Notifications</span>\<span class="title">Notifiable</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminUser</span> <span class="keyword">extends</span> <span class="title">Authenticatable</span> </span>&#123;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Notifiable</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关联到模型的数据库</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> $table = <span class="string">'admin'</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The attributes that are mass assignable.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> $fillable = [<span class="comment">//验证的字段</span></span><br><span class="line"><span class="string">'username'</span>, <span class="string">'password'</span>,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The attributes that should be hidden for arrays.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> $hidden = [</span><br><span class="line"><span class="string">'password'</span>, <span class="string">'remember_token'</span>,</span><br><span class="line">];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后在控制器里调用：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">(Request $request)</span> </span>&#123;</span><br><span class="line">$data = $request-&gt;only(<span class="string">'username'</span>, <span class="string">'password'</span>);</span><br><span class="line"><span class="keyword">if</span> (Auth::guard(<span class="string">'admin'</span>)-&gt;attempt($data, $remember)) &#123;</span><br><span class="line"><span class="keyword">return</span> redirect(<span class="string">'admin/index/index'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> redirect(<span class="string">'admin/login/index'</span>)-&gt;withInput($request-&gt;except(<span class="string">'password'</span>))-&gt;with(<span class="string">'msg'</span>, <span class="string">'用户名或密码错误'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>当然，如果你的网站只有后台管理员不涉及到前台用户，那么在auth.php里可修改默认配置：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'defaults'</span> =&gt; [</span><br><span class="line"><span class="string">'guard'</span> =&gt; <span class="string">'admin'</span>,<span class="comment">//将默认改为admin</span></span><br><span class="line"><span class="string">'passwords'</span> =&gt; <span class="string">'users'</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure></p><p>这样在调用的时候不用指定guard：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Auth::attempt($data, $remember)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.ajax&lt;br&gt;使用ajax传递数据必须带上_token字段:&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;spa
      
    
    </summary>
    
      <category term="PHP" scheme="http://imcsi.cn/categories/PHP/"/>
    
    
      <category term="laravel" scheme="http://imcsi.cn/tags/laravel/"/>
    
      <category term="ajax" scheme="http://imcsi.cn/tags/ajax/"/>
    
      <category term="模板继承" scheme="http://imcsi.cn/tags/%E6%A8%A1%E6%9D%BF%E7%BB%A7%E6%89%BF/"/>
    
      <category term="登陆验证" scheme="http://imcsi.cn/tags/%E7%99%BB%E9%99%86%E9%AA%8C%E8%AF%81/"/>
    
      <category term="中间件" scheme="http://imcsi.cn/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Docker使用（Windows系统）</title>
    <link href="http://imcsi.cn/2018/03/23/Docker%E4%BD%BF%E7%94%A8%EF%BC%88Windows%E7%B3%BB%E7%BB%9F%EF%BC%89/"/>
    <id>http://imcsi.cn/2018/03/23/Docker使用（Windows系统）/</id>
    <published>2018-03-23T06:46:56.000Z</published>
    <updated>2018-03-26T03:17:45.929Z</updated>
    
    <content type="html"><![CDATA[<p>首先从Docker官网上面下载最新版本点击前往</p><p>安装过程可能会有点长，因为需要在线下载很多文件。</p><p>安装好了之后桌面上会出现一个这样的图标：</p><p><img src="https://i.imgur.com/ddozzz9.png" alt=""></p><p>双击之后出现running就ok了</p><p>然后打开命令提示符输入：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br><span class="line"></span><br><span class="line">PS C:\WINDOWS\system32&gt; docker version</span><br><span class="line">Client:</span><br><span class="line"> Version:   <span class="number">17.12</span><span class="number">.0</span>-ce</span><br><span class="line"> API version:   <span class="number">1.35</span></span><br><span class="line"> Go version:go1<span class="number">.9</span><span class="number">.2</span></span><br><span class="line"> Git commit:c97c6d6</span><br><span class="line"> Built: Wed Dec <span class="number">27</span> <span class="number">20</span>:<span class="number">05</span>:<span class="number">22</span> <span class="number">2017</span></span><br><span class="line"> OS/Arch:   windows/amd64</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Engine:</span><br><span class="line">  Version:  <span class="number">17.12</span><span class="number">.0</span>-ce</span><br><span class="line">  API version:  <span class="number">1.35</span> (minimum version <span class="number">1.12</span>)</span><br><span class="line">  Go version:   go1<span class="number">.9</span><span class="number">.2</span></span><br><span class="line">  Git commit:   c97c6d6</span><br><span class="line">  Built:Wed Dec <span class="number">27</span> <span class="number">20</span>:<span class="number">12</span>:<span class="number">29</span> <span class="number">2017</span></span><br><span class="line">  OS/Arch:  linux/amd64</span><br><span class="line">  Experimental: <span class="keyword">true</span></span><br></pre></td></tr></table></figure></p><p>会出现很多版本相关信息。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PS C:\WINDOWS\system32&gt; docker images <span class="comment">//查看当前已有镜像</span></span><br><span class="line">REPOSITORY  TAG IMAGE ID</span><br><span class="line">CREATED SIZE</span><br><span class="line">centos  latest  <span class="number">2</span>d194b392dd1</span><br><span class="line"><span class="number">32</span> hours ago195MB</span><br><span class="line">docker4w/nsenter-dockerdlatest  cae870735e91</span><br><span class="line"><span class="number">4</span> months ago187kB</span><br><span class="line">registry.cn-hangzhou.aliyuncs.com/diligentyang/centos6<span class="number">.7</span>_nginx_1<span class="number">.10</span>_php5<span class="number">.6</span><span class="number">.29</span>   v1<span class="number">.0072258802250</span></span><br><span class="line"><span class="number">14</span> months ago   <span class="number">854</span>MB</span><br></pre></td></tr></table></figure></p><p>关于镜像可以使用命令：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search centos</span><br></pre></td></tr></table></figure><p>来查找与centos相关的镜像<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    PS C:\WINDOWS\system32&gt; docker search centos</span><br><span class="line">    NAME   DESCRIPTION STARS   OFFICIAL</span><br><span class="line">       AUTOMATED</span><br><span class="line">    centos The official build of CentOS.   <span class="number">4079</span>[OK]</span><br><span class="line">    </span><br><span class="line">    ansible/centos7-ansibleAnsible on Centos7  <span class="number">105</span></span><br><span class="line">···</span><br><span class="line">其中越靠前是STARS越多，相当于使用的人最多，当我们选择了一个镜像后查看它的AUTOMATED就能直接拉取镜像</span><br><span class="line">```php</span><br><span class="line">    docker pull registry.cn-hangzhou.aliyuncs.com/diligentyang/centos6<span class="number">.7</span>_nginx_1<span class="number">.10</span>_php5<span class="number">.6</span><span class="number">.29</span>:v1<span class="number">.0</span></span><br></pre></td></tr></table></figure></p><p>这里使用的是一个阿里云搭建的php5.6+nginx1.10的镜像<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -p <span class="number">80</span>:<span class="number">80</span> --name ali -it <span class="number">5</span>a7e /bin/bash</span><br></pre></td></tr></table></figure></p><p>docker run ：创建一个新的容器并运行一个命令，常用参数:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- -i: 以交互模式运行容器，通常与 -t 同时使用；</span><br><span class="line">- -t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用</span><br><span class="line">- –name=”nginx-lb”: 为容器指定一个名称；</span><br><span class="line">- -P 将容器的<span class="number">80</span>端口映射到主机随机端口。</span><br><span class="line">- -p <span class="number">80</span>:<span class="number">80</span> 将容器的<span class="number">80</span>端口映射到主机的<span class="number">80</span>端口</span><br><span class="line">- -v 映射主机目录和容器目录</span><br></pre></td></tr></table></figure></p><p>其中 5a7e为镜像的IMAGE ID</p><p>如果出现报错的情况：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -p <span class="number">80</span>:<span class="number">80</span> --name ali -it <span class="number">5</span>a7e /bin/bash</span><br><span class="line">cannot enable tty mode on non tty input</span><br></pre></td></tr></table></figure></p><p>总结出两条解决方案</p><p>1: 在命令前面加上winpty<br>2: 首先执行 docker-machine ssh default</p><p>不出意外的话就能直接进入到镜像了<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ec600fcf672e /]<span class="comment"># ls</span></span><br><span class="line">bin   dev  home  lib64  lost+found  mnt   opt   root  selinux  sys  usr</span><br><span class="line">boot  etc  lib   local  media   mysql-community-release-el7<span class="number">-5.</span>noarch.rpm  proc  sbin  srv  tmp  <span class="keyword">var</span></span><br></pre></td></tr></table></figure></p><p>该镜像已经配置好了php环境，所以我们只需要：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ec600fcf672e /]<span class="comment"># php-fpm</span></span><br><span class="line">[root@ec600fcf672e /]<span class="comment"># service nginx</span></span><br></pre></td></tr></table></figure></p><p>就能启动了</p><p>在浏览器地址栏输入localhost 或者你的内网ip如果出现phpinfo的相关信息就说明启动成功。</p><p>其中网站根目录为  /var/www</p><p>如果想退出这个容器（在后台运行）需要按下ctrl+p ctrl+q （偶尔会失效。。）</p><p>如果想要切回去继续工作只需要docker attach 容器id（可以为前几位，只要和别的区分开就好）</p><p>查看所有容器：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PS C:\WINDOWS\system32&gt; docker ps -a</span><br><span class="line">CONTAINER IDIMAGE   COMMAND CREATED STATUS   PORTS</span><br><span class="line">  NAMES</span><br><span class="line">ec600fcf672e0722<span class="string">"/bin/bash"</span> About an hour ago   Up About an hour <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">80</span>-&gt;<span class="number">8</span></span><br><span class="line">tcp   ali</span><br><span class="line">fe985915775ecentos  <span class="string">"ls"</span><span class="number">6</span> hours ago Exited (<span class="number">0</span>) <span class="number">6</span> hours ago</span><br></pre></td></tr></table></figure></p><p>删除不用的容器</p><p>docker rm 容器id</p><p>如果容器正在运行可以使用docker stop 容器id，关闭容器后再删除。或者直接使用docker rm -f 容器id</p><p>删除镜像</p><p>docker rmi 镜像id</p><p>那么如何将本地目录映射到容器里进行调试呢</p><p>可以在启动容器的加上一个-v参数，映射主机目录和容器目录<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p <span class="number">80</span>:<span class="number">80</span> --name test -v /e/wamp/www:/<span class="keyword">var</span>/www -it ec60 /bin/bash</span><br></pre></td></tr></table></figure></p><p>由于我们之前已经配置并启动了镜像，那么我们可以将本地的项目拷贝到容器里：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker cp /e/wamp/www/test ec60:/<span class="keyword">var</span>/www</span><br></pre></td></tr></table></figure></p><p>注意项目的路径写法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先从Docker官网上面下载最新版本点击前往&lt;/p&gt;
&lt;p&gt;安装过程可能会有点长，因为需要在线下载很多文件。&lt;/p&gt;
&lt;p&gt;安装好了之后桌面上会出现一个这样的图标：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/ddozzz9.png&quot; alt
      
    
    </summary>
    
      <category term="PHP" scheme="http://imcsi.cn/categories/PHP/"/>
    
    
      <category term="Docker" scheme="http://imcsi.cn/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Thinkphp+jquery实现多图异步上传</title>
    <link href="http://imcsi.cn/2018/03/23/Thinkphp-jquery%E5%AE%9E%E7%8E%B0%E5%A4%9A%E5%9B%BE%E5%BC%82%E6%AD%A5%E4%B8%8A%E4%BC%A0/"/>
    <id>http://imcsi.cn/2018/03/23/Thinkphp-jquery实现多图异步上传/</id>
    <published>2018-03-23T06:43:35.000Z</published>
    <updated>2018-03-26T03:21:02.414Z</updated>
    
    <content type="html"><![CDATA[<p>网上查找了很多方法，有的多图上传是通过html添加多个input框type=file，然后在后台遍历循环$_FILES实现一张张上传图片。还有一种就是通过jq将图片转码成base64来将图片存储成字符串的形式，然后后台将获取到的字符串通过解码成图片文件保存，这里要说的就是这种方法。</p><p>html页面主要部分如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="weui-cells weui-cells_form" id="uploader"&gt;</span><br><span class="line">    &lt;div class="weui-cell"&gt;</span><br><span class="line">        &lt;div class="weui-cell__bd"&gt;</span><br><span class="line">            &lt;div class="weui-uploader"&gt;</span><br><span class="line">                &lt;input name=<span class="string">"goods_id"</span> value=<span class="string">"&#123;$goods_id&#125;"</span> type=<span class="string">"hidden"</span>&gt;</span><br><span class="line">                &lt;div class="weui-uploader__bd"&gt;</span><br><span class="line">                    &lt;ul class="weui-uploader__files" id="uploaderFiles"&gt;&lt;/ul&gt;</span><br><span class="line">                    &lt;div class="weui-uploader__input-box"&gt;</span><br><span class="line">                        &lt;div class="file-img"&gt;</span><br><span class="line">                            &lt;i&gt;&lt;/i&gt;</span><br><span class="line">                            &lt;p&gt;添加图片&lt;/p&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;input id="uploaderInput" class="weui-uploader__input" name="img" type="file" accept="image/*" capture="camera" multiple="" /&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>jq部分：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 图片手动上传 */</span></span><br><span class="line"><span class="keyword">var</span> uploadCustomFileList = [];</span><br><span class="line"><span class="keyword">var</span> uploadCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">weui.uploader(<span class="string">'#uploader'</span>, &#123;</span><br><span class="line"><span class="comment">// url: 'http://localhost:8002/upload',</span></span><br><span class="line">auto: <span class="keyword">false</span>,</span><br><span class="line">type:<span class="string">'base64'</span>,</span><br><span class="line">onQueued: <span class="function"><span class="keyword">function</span> <span class="title">onQueued</span><span class="params">()</span> </span>&#123;</span><br><span class="line">uploadCustomFileList.push(this);</span><br><span class="line">  </span><br><span class="line"><span class="comment">//console.log(this.url.match(/url\((.*?)\)/)[1].replace(/"/g, ''));</span></span><br><span class="line">&#125;,</span><br><span class="line">onBeforeQueued: <span class="function"><span class="keyword">function</span> <span class="params">(files)</span> </span>&#123;</span><br><span class="line"><span class="comment">// `this` 是轮询到的文件, `files` 是所有文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ([<span class="string">"image/jpg"</span>, <span class="string">"image/jpeg"</span>, <span class="string">"image/png"</span>, <span class="string">"image/gif"</span>].indexOf(this.type) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">weui.alert(<span class="string">'请上传图片'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>; <span class="comment">// 阻止文件添加</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (this.size &gt; <span class="number">2</span> * <span class="number">1024</span> * <span class="number">1024</span>) &#123;</span><br><span class="line">weui.alert(<span class="string">'请上传不超过2M的图片'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (files.length &gt; <span class="number">3</span>) &#123; <span class="comment">// 防止一下子选择过多文件</span></span><br><span class="line">weui.alert(<span class="string">'最多只能上传3张图片，请重新选择'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (uploadCount + <span class="number">1</span> &gt; <span class="number">3</span>) &#123;</span><br><span class="line">weui.alert(<span class="string">'最多只能上传3张图片'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">++uploadCount;</span><br><span class="line"></span><br><span class="line"><span class="comment">//return true; // 阻止默认行为，不插入预览图的框架</span></span><br><span class="line">&#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>将上传的图片转码成base64<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缩略图预览</span></span><br><span class="line">document.querySelector(<span class="string">'#uploaderFiles'</span>).addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">var</span> target = e.target;</span><br><span class="line"><span class="comment">// var _that = this.children.length;</span></span><br><span class="line"><span class="comment">// console.log(_that);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (!target.classList.contains(<span class="string">'weui-uploader__file'</span>) &amp;&amp; target) &#123;</span><br><span class="line">target = target.parentNode;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!target) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> url = target.getAttribute(<span class="string">'style'</span>) || <span class="string">''</span>;</span><br><span class="line"><span class="keyword">var</span> id = target.getAttribute(<span class="string">'data-id'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (url) &#123;</span><br><span class="line">url = url.match(/url\((.*?)\)/)[<span class="number">1</span>].replace(/<span class="string">"/g, '');</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">var gallery = weui.gallery(url, &#123;</span></span><br><span class="line"><span class="string">onDelete: function onDelete() &#123;</span></span><br><span class="line"><span class="string">weui.confirm('确定删除该图片？', function () &#123;</span></span><br><span class="line"><span class="string">var index;</span></span><br><span class="line"><span class="string">for (var i = 0, len = uploadCustomFileList.length; i &lt; len; ++i) &#123;</span></span><br><span class="line"><span class="string">var file = uploadCustomFileList[i];</span></span><br><span class="line"><span class="string">if (file.id == id) &#123;</span></span><br><span class="line"><span class="string">index = i;</span></span><br><span class="line"><span class="string">break;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">if (index !== undefined) uploadCustomFileList.splice(index, 1);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> uploadCount --;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">target.remove();</span></span><br><span class="line"><span class="string">gallery.hide();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure></p><p>这是生成缩略图预览<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">$(<span class="string">"form"</span>).submit(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr=[];</span><br><span class="line"><span class="keyword">var</span> urls=$(<span class="string">"[name=upload_url]"</span>).val();</span><br><span class="line">  $(<span class="string">"#uploaderFiles"</span>).find(<span class="string">"li"</span>).each(<span class="function"><span class="keyword">function</span><span class="params">(index,item)</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> data_id = $(item).data(<span class="string">"id"</span>);</span><br><span class="line">   <span class="keyword">var</span> img_url = $(item)[<span class="number">0</span>].style.backgroundImage.split(<span class="string">"\""</span>)[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//.split("\"")[1]</span></span><br><span class="line">arr[index]=img_url;</span><br><span class="line"><span class="comment">//console.log(data_id);</span></span><br><span class="line"><span class="comment">//console.log(img_url);</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">type:<span class="string">'post'</span>,</span><br><span class="line">url:urls,</span><br><span class="line">async:<span class="keyword">false</span>,</span><br><span class="line">data:&#123;result:arr&#125;,</span><br><span class="line">success:<span class="function"><span class="keyword">function</span><span class="params">(msg)</span></span>&#123;</span><br><span class="line">console.log(msg);</span><br><span class="line">&#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  console.log(arr);</span><br><span class="line"><span class="keyword">return</span>  <span class="keyword">false</span>;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>以上是将转码成base64的图片存到一个二维数组里面，方便后台遍历存储。</p><p>jquery传递的数据大致如下：</p><p><img src="https://i.imgur.com/tQSb2iq.png" alt=""></p><p>这是传递两个图片的例子，当只有一个图片的时候二维数组的长度（length）即为1。</p><p>后台接收处理图片：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异步上传图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (IS_AJAX) &#123;</span><br><span class="line">$data = I(<span class="string">"result"</span>);</span><br><span class="line"><span class="keyword">foreach</span> ($data <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">list</span>($type, $datas) = explode(<span class="string">','</span>, $value);<span class="comment">//获取图片类型，以及转码后的图片</span></span><br><span class="line"><span class="keyword">if</span> (strstr($type, <span class="string">'image/jpeg'</span>) !== <span class="string">''</span>) &#123;<span class="comment">//判断图片类型</span></span><br><span class="line">$ext = <span class="string">'.jpg'</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (strstr($type, <span class="string">'image/gif'</span>) !== <span class="string">''</span>) &#123;</span><br><span class="line">$ext = <span class="string">'.gif'</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (strstr($type, <span class="string">'image/png'</span>) !== <span class="string">''</span>) &#123;</span><br><span class="line">$ext = <span class="string">'.png'</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">$photo = __ROOT__ . <span class="string">"/uploads/Goods/"</span> . date(<span class="string">"Y-m-d"</span>, time()) . <span class="string">'/'</span> . time() . $key . $ext;<span class="comment">//生成图片地址和文件并加上图片后缀</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 生成文件</span></span><br><span class="line">file_put_contents($photo, base64_decode($datas), <span class="keyword">true</span>);<span class="comment">//解码图片进行保存</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;ajaxReturn(<span class="string">"ok"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>接收到的数据就是一个二维数组，内容类似：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">"data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABgk.."</span>,data:image\/jpeg;base64,\/<span class="number">9</span>j\HBwYIChAKCgk..<span class="string">"]</span></span><br></pre></td></tr></table></figure></p><p>大概就是二维数组中的每个数组都是一个很长的字符串，其中base64后面就是经转码后的图片。我们要做的就是将图片还原然后保存。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;网上查找了很多方法，有的多图上传是通过html添加多个input框type=file，然后在后台遍历循环$_FILES实现一张张上传图片。还有一种就是通过jq将图片转码成base64来将图片存储成字符串的形式，然后后台将获取到的字符串通过解码成图片文件保存，这里要说的就是这
      
    
    </summary>
    
      <category term="PHP" scheme="http://imcsi.cn/categories/PHP/"/>
    
    
      <category term="tp" scheme="http://imcsi.cn/tags/tp/"/>
    
  </entry>
  
  <entry>
    <title>Mysql相关小技巧总结在这里</title>
    <link href="http://imcsi.cn/2018/03/23/Mysql%E7%9B%B8%E5%85%B3%E5%B0%8F%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    <id>http://imcsi.cn/2018/03/23/Mysql相关小技巧总结在这里/</id>
    <published>2018-03-23T06:42:47.000Z</published>
    <updated>2018-03-26T03:19:49.695Z</updated>
    
    <content type="html"><![CDATA[<p>1.Mysql触发器</p><p>适用案例，删除订单同时删除订单详情：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER del_orderdetails AFTER DELETE ON ms_order <span class="keyword">FOR</span> EACH ROW</span><br><span class="line">BEGIN</span><br><span class="line">DELETE FROM ms_order_details WHERE user_id=old.id;</span><br><span class="line">END</span><br></pre></td></tr></table></figure></p><p>del_orderdetails：触发器的名称 AFTER：触发时机，为BEFORE或者AFTER DELETE：触发事件，为INSERT、DELETE或者UPDATE ms_order：表示建立触发器的表明，就是在哪张表上建立触发器</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.Mysql触发器&lt;/p&gt;
&lt;p&gt;适用案例，删除订单同时删除订单详情：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;
      
    
    </summary>
    
      <category term="Mysql" scheme="http://imcsi.cn/categories/Mysql/"/>
    
    
      <category term="mysql" scheme="http://imcsi.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>一些小问题将全部总结在这里</title>
    <link href="http://imcsi.cn/2018/03/23/%E4%B8%80%E4%BA%9B%E5%B0%8F%E9%97%AE%E9%A2%98%E5%B0%86%E5%85%A8%E9%83%A8%E6%80%BB%E7%BB%93%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    <id>http://imcsi.cn/2018/03/23/一些小问题将全部总结在这里/</id>
    <published>2018-03-23T06:41:06.000Z</published>
    <updated>2018-03-26T03:21:13.872Z</updated>
    
    <content type="html"><![CDATA[<p>1.使用TP3.2.3将项目部署到线上出现Undefined class constant ‘MYSQL_ATTR_INIT_COMMAND’的情况</p><p>是因为php没有开启Mysqlnd扩展，php5以上版本已经在使用mysqlnd驱动而非mysql，至于mysqlnd可自行百度了解。且在php7则正式移除了mysql扩展。</p><p>在使用phpinfo()打印php信息的时候并没有显示mysqlnd扩展<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install php70w-mysqlnd</span><br><span class="line">systemctl restart php-fpm</span><br></pre></td></tr></table></figure></p><p>网上搜了很久，也折腾了很久，最后发现直接安装mysqlnd扩展，并重启php，再次打印phpinfo()将出现以下内容：</p><p><img src="https://i.imgur.com/KopF8jI.png" alt=""></p><p>证明已经成功开启mysqlnd扩展，解决了之前出现的问题。</p><p>2.FQ</p><p>常用的有Lantern（蓝灯），还有火狐浏览器的一个好用的插件Hoxx VPN Proxy</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.使用TP3.2.3将项目部署到线上出现Undefined class constant ‘MYSQL_ATTR_INIT_COMMAND’的情况&lt;/p&gt;
&lt;p&gt;是因为php没有开启Mysqlnd扩展，php5以上版本已经在使用mysqlnd驱动而非mysql，至于mys
      
    
    </summary>
    
      <category term="PHP" scheme="http://imcsi.cn/categories/PHP/"/>
    
    
      <category term="php" scheme="http://imcsi.cn/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP无极分类递归方法实现</title>
    <link href="http://imcsi.cn/2018/03/23/PHP%E6%97%A0%E6%9E%81%E5%88%86%E7%B1%BB%E9%80%92%E5%BD%92%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0/"/>
    <id>http://imcsi.cn/2018/03/23/PHP无极分类递归方法实现/</id>
    <published>2018-03-23T06:36:44.000Z</published>
    <updated>2018-03-26T03:20:22.625Z</updated>
    
    <content type="html"><![CDATA[<p>在做权限相关模块的功能，我们需要给不同的用户指定不同功能权限。</p><p>首先我们需要一张分类的表格。类似于这样：</p><p><img src="https://i.imgur.com/Ix6npqC.png" alt=""></p><p>其中category_id表示的是分类id，category_name表示的是分类名，pid代表的就是父级分类id，我们可以将顶级的pid设置为0，以递归算法实现父级以下包涵所有子级：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 无极分类递归 选择权限</span></span><br><span class="line"><span class="comment">*   <span class="doctag">@param</span>   int $assortPid   要查询分类的父级id</span></span><br><span class="line"><span class="comment">*   <span class="doctag">@param</span>   mixed   $tag 上下级分类之间的分隔符</span></span><br><span class="line"><span class="comment">*   <span class="doctag">@param</span>   array   $list包涵权限的数组</span></span><br><span class="line"><span class="comment">*   <span class="doctag">@return</span>  string  $tree返回的分类树型结构结果 </span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">recursiveAssort</span><span class="params">($assortPid, $tag = <span class="string">''</span>,$list)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line"></span><br><span class="line">$assort = M(<span class="string">'category'</span>)-&gt;where(<span class="string">"pid = $assortPid"</span>)-&gt;field(<span class="string">'category_id, category_name'</span>)-&gt;order(<span class="string">"category_id asc"</span>)-&gt;select();</span><br><span class="line"><span class="keyword">foreach</span> ($assort <span class="keyword">as</span> $value) &#123;</span><br><span class="line">  <span class="keyword">if</span>(in_array($value[<span class="string">'category_id'</span>], $list))&#123;</span><br><span class="line">$tree .= <span class="string">'&lt;li&gt;'</span>.$tag.<span class="string">'&lt;input type="checkbox" checked="checked" name="permission[]" value="'</span> . $value[<span class="string">'category_id'</span>] . <span class="string">'"&gt;'</span> .<span class="string">"&lt;label for='role_2'&gt;"</span>.$value[<span class="string">'category_name'</span>].<span class="string">"&lt;/label&gt;&lt;/li&gt;"</span>;</span><br><span class="line">$tree .= recursiveAssort($value[<span class="string">'category_id'</span>], $tag.<span class="string">'├ '</span>,$list);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$tree .= <span class="string">'&lt;li&gt;'</span>.$tag.<span class="string">'&lt;input type="checkbox" name="permission[]" value="'</span> . $value[<span class="string">'category_id'</span>] . <span class="string">'"&gt;'</span> .<span class="string">"&lt;label for='role_2'&gt;"</span>.$value[<span class="string">'category_name'</span>].<span class="string">"&lt;/label&gt;&lt;/li&gt;"</span>;</span><br><span class="line">$tree .= recursiveAssort($value[<span class="string">'category_id'</span>], $tag.<span class="string">'├ '</span>,$list);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $tree;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>比如<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$list=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br></pre></td></tr></table></figure></p><p>那么分类id为1,3,4的分类将会自动添加钩中的样式。</p><p>相当于先遍历出pid=0的所有顶级菜单，然后再次调用自身查询当前顶级菜单下的子级菜单，以此类推，直到查询结束。同时以字符串拼接的方式存放在$tree里。</p><p>以下为工作中改良后的版本，实现的效果如下：</p><p><img src="https://i.imgur.com/UAcpdqu.png" alt=""></p><p>源代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;li class="level0"&gt;</span><br><span class="line">&lt;a href=<span class="string">""</span>&gt;</span><br><span class="line">&lt;i class="icon-cogs"&gt;&lt;/i&gt;</span><br><span class="line">&lt;span class="title"&gt;基础设置&lt;/span&gt;</span><br><span class="line">&lt;span class="arrow"&gt;&lt;/span&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;ul class="sub-menu"&gt;</span><br><span class="line">&lt;li class="level1"&gt;</span><br><span class="line">&lt;a href=<span class="string">""</span>&gt;</span><br><span class="line">&lt;i class="icon-home"&gt;&lt;/i&gt;</span><br><span class="line">&lt;span class="title"&gt;管理中心&lt;/span&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;li class="level1"&gt;</span><br><span class="line">&lt;a href=<span class="string">""</span>&gt;</span><br><span class="line">&lt;i class="icon-globe"&gt;&lt;/i&gt;</span><br><span class="line">&lt;span class="title"&gt;站点配置&lt;/span&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;li class="level1"&gt;</span><br><span class="line">&lt;a href=<span class="string">""</span>&gt;</span><br><span class="line">&lt;i class="icon-user"&gt;&lt;/i&gt;</span><br><span class="line">&lt;span class="title"&gt;管理员&lt;/span&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"> &lt;/li&gt;</span><br></pre></td></tr></table></figure></p><p>改版后的递归方法：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 无极分类递归 菜单加载</span></span><br><span class="line"><span class="comment">*   <span class="doctag">@param</span>   int $assortPid   要查询分类的父级id</span></span><br><span class="line"><span class="comment">*   <span class="doctag">@param</span>   mixed   $tag 上下级分类之间的分隔符</span></span><br><span class="line"><span class="comment">*   <span class="doctag">@param</span>   array   $list包涵权限的数组</span></span><br><span class="line"><span class="comment">*   <span class="doctag">@return</span>  string  $tree返回的分类树型结构结果 </span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">recursiveAssort_menu</span><span class="params">($assortPid,$list,$tag = <span class="string">'&lt;li class="level0"&gt;'</span>,$tag2=<span class="string">'&lt;ul class="sub-menu"&gt;'</span>,$tag3=<span class="string">'&lt;span class="arrow"&gt;&lt;/span&gt;'</span>,$tag4=<span class="string">'&lt;/ul&gt;&lt;/li&gt;'</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">$assort = M(<span class="string">'category'</span>)-&gt;where(<span class="string">"pid = $assortPid"</span>)-&gt;field(<span class="string">'category_id, category_name,url,icon'</span>)-&gt;order(<span class="string">"category_id asc"</span>)-&gt;select();</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($assort <span class="keyword">as</span> $value) &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(in_array($value[<span class="string">'category_id'</span>], $list))&#123;</span><br><span class="line">$tree.=$tag;</span><br><span class="line">$tree.= <span class="string">'&lt;a href="'</span>.$value[<span class="string">'url'</span>].<span class="string">'"&gt; &lt;i class="'</span>.$value[<span class="string">'icon'</span>].<span class="string">'"&gt;&lt;/i&gt;&lt;span class="title"&gt;'</span>.$value[<span class="string">'category_name'</span>].<span class="string">'&lt;/span&gt;'</span>.$tag3.<span class="string">'&lt;/a&gt;'</span>.$tag2;</span><br><span class="line">$tree.= recursiveAssort_menu($value[<span class="string">'category_id'</span>],$list,<span class="string">'&lt;li class="level1"&gt;'</span>,<span class="string">''</span>,<span class="string">''</span>,<span class="string">'&lt;/li&gt;'</span>);</span><br><span class="line">$tree.=$tag4;</span><br><span class="line">  </span><br><span class="line"> </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $tree;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在做权限相关模块的功能，我们需要给不同的用户指定不同功能权限。&lt;/p&gt;
&lt;p&gt;首先我们需要一张分类的表格。类似于这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Ix6npqC.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;其中category_i
      
    
    </summary>
    
      <category term="PHP" scheme="http://imcsi.cn/categories/PHP/"/>
    
    
      <category term="递归 php" scheme="http://imcsi.cn/tags/%E9%80%92%E5%BD%92-php/"/>
    
  </entry>
  
  <entry>
    <title>Linux下MYSQL开启远程访问权限</title>
    <link href="http://imcsi.cn/2018/03/23/Linux%E4%B8%8BMYSQL%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90/"/>
    <id>http://imcsi.cn/2018/03/23/Linux下MYSQL开启远程访问权限/</id>
    <published>2018-03-23T06:31:52.000Z</published>
    <updated>2018-03-26T03:19:34.627Z</updated>
    
    <content type="html"><![CDATA[<p>当在Linux服务器上搭建了LNMP环境后，在服务器端本地可以访问，但是有时候需要本地先创建数据表再上传到服务器，而Linux下Mysql默认安装完成后只有本地访问的权限，需要指定用户设置访问权限才能远程访问该数据库。</p><p>首先登陆数据库：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -U root -p</span><br></pre></td></tr></table></figure></p><p>输入数据库密码</p><p>然后运行以下sql语句：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to <span class="string">'root'</span>@<span class="string">'%'</span> identified by <span class="string">'root'</span>;</span><br></pre></td></tr></table></figure></p><p>前面的root代表远程登陆时的用户名，后面的root代表密码，这样设置的是账号为root密码也为root的mysql用户，中间的’%’表示所有ip地址都能远程访问，如果要针对一台机器访问，将‘%’改为对应的ip地址即可访问数据库。</p><p>特别提醒不要讲账号密码设置成简单的组合，不然容易被黑。当我按照以上的操作成功远程登陆，过了几天以后。。。。<br>自己创建的数据库不见了，取而代之的是一个名为 “WARNING”的数据库，其中只有一张名为Readme的表，wtf？打开后是一条数据，大致内容是这样的：</p><pre><code>Your Data is downloaded and backed up on our secured servers. To recover your lost data: Send 0.1 BTC to our BitCoin Address and Contact us by eMail with your server IP Address and a Proof of Payment. Any eMail without your server IP Address and a Proof of Payment together will be ignored. You are welcome</code></pre><p>翻译后是这样的：</p><p>您的数据已下载并备份在我们的安全服务器上。恢复你丢失的数据：发送0.1 BTC我们的比特币地址的服务器IP地址的电子邮件和付款证明联系我们。任何没有您的服务器IP地址和付款证明的电子邮件都将被忽略。不客气<br>上网查了一下原来是数据库被黑了，因为设置的账号密码太过简单，而且设置的是在所有ip上都能登陆。所以不要为了省事就不限制登陆数据库的ip地址，也不要将远程登陆的用户密码设置的过于简单。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当在Linux服务器上搭建了LNMP环境后，在服务器端本地可以访问，但是有时候需要本地先创建数据表再上传到服务器，而Linux下Mysql默认安装完成后只有本地访问的权限，需要指定用户设置访问权限才能远程访问该数据库。&lt;/p&gt;
&lt;p&gt;首先登陆数据库：&lt;br&gt;&lt;figure 
      
    
    </summary>
    
      <category term="Mysql" scheme="http://imcsi.cn/categories/Mysql/"/>
    
    
      <category term="mysql" scheme="http://imcsi.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Centos下LNMP环境搭建</title>
    <link href="http://imcsi.cn/2018/03/23/Centos%E4%B8%8BLNMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://imcsi.cn/2018/03/23/Centos下LNMP环境搭建/</id>
    <published>2018-03-23T06:24:56.000Z</published>
    <updated>2018-03-26T03:16:30.139Z</updated>
    
    <content type="html"><![CDATA[<p>1,.安装Nginx</p><p>添加CentOS 7 Nginx yum资源库<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh http:<span class="comment">//nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span></span><br></pre></td></tr></table></figure></p><p>安装：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install nginx</span><br></pre></td></tr></table></figure></p><p>启动：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx.service</span><br></pre></td></tr></table></figure></p><p>设置开机启动：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx.service</span><br></pre></td></tr></table></figure></p><p>nginx配置：</p><p>默认配置文件在 /etc/nginx/conf.d/default.conf</p><p>我们只需要复制一份配置文件来实现根据域名来访问不同的目录<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp <span class="keyword">default</span>.conf beeasy.conf</span><br></pre></td></tr></table></figure></p><p>然后beeasy.conf的配置如下：<br><img src="https://i.imgur.com/Bbs4OzM.png" alt=""></p><p>server_name 即配置的访问域名</p><p>root 后面即为访问该域名的根目录</p><p>该配置解决了在WordPress框架下修改固定链接后除首页其他页面404的问题。</p><p>重启nginx：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx.service</span><br></pre></td></tr></table></figure></p><p>2.安装php7.0</p><p>添加CentOS 7 php7 yum资源库<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https:<span class="comment">//dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span></span><br><span class="line">rpm -Uvh https:<span class="comment">//mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></span><br></pre></td></tr></table></figure></p><p>安装：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install php70w php70w-opcache</span><br><span class="line">yum install php70w-fpm php70w-opcache</span><br><span class="line">yum install php70w-mysql</span><br></pre></td></tr></table></figure></p><p>你也可以安装一些其他扩展：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install yum-plugin-replace</span><br><span class="line">yum replace php-common --replace-with=php70w-common</span><br></pre></td></tr></table></figure></p><p>还包涵一些其他的扩展包，可以根据需求安装：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php70w-dba，php70w-devel，php70w-embedded，php70w-enchant，php70w-gd，php70w-pdo等。。</span><br></pre></td></tr></table></figure></p><p>可参考<a href="https://webtatic.com/packages/php70/" target="_blank" rel="noopener">https://webtatic.com/packages/php70/</a></p><p>3.安装mysql<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql</span><br></pre></td></tr></table></figure></p><p>安装mysql-server<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-server</span><br></pre></td></tr></table></figure></p><p>虽然可能会报错，但是不要慌<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="comment">//dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span></span><br><span class="line"></span><br><span class="line">rpm -ivh mysql-community-release-el7<span class="number">-5.</span>noarch.rpm</span><br><span class="line"></span><br><span class="line">yum install mysql-community-server</span><br></pre></td></tr></table></figure></p><p>然后需要确定几次，都按y回车即可</p><p>安装mysql扩展包：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-connector-odbc mysql-devel libdbi-dbd-mysql</span><br></pre></td></tr></table></figure></p><p>重启对应服务：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">service mysqld restart</span><br><span class="line"></span><br><span class="line">service php-fpm start</span><br><span class="line"></span><br><span class="line">service nginx restart</span><br></pre></td></tr></table></figure></p><p>初次安装mysql是没有密码的,我们要设置密码，mysql的默认账户为root</p><p>设置 MySQL 数据 root 账户的密码：</p><p>命令：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure></p><p>当出现如下提示时候直接按回车：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter current password <span class="keyword">for</span> root</span><br></pre></td></tr></table></figure></p><p>出现如下再次回车：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set root password? [Y/n]</span><br></pre></td></tr></table></figure></p><p>出现如下提示输入你需要设置的密码，这里输入了root,输入密码是不显示的，回车后再输入一次确认：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Remove anonymous users? [Y/n]</span><br><span class="line">Disallow root login remotely? [Y/n]</span><br><span class="line">Remove test database <span class="keyword">and</span> access to it? [Y/n]</span><br><span class="line">Reload privilege tables now? [Y/n]</span><br></pre></td></tr></table></figure></p><p>以上的教程都是搭建完成以后写的，如果存在问题，还请指出。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1,.安装Nginx&lt;/p&gt;
&lt;p&gt;添加CentOS 7 Nginx yum资源库&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;
      
    
    </summary>
    
      <category term="Linux" scheme="http://imcsi.cn/categories/Linux/"/>
    
    
      <category term="mysql" scheme="http://imcsi.cn/tags/mysql/"/>
    
      <category term="nginx" scheme="http://imcsi.cn/tags/nginx/"/>
    
      <category term="php" scheme="http://imcsi.cn/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Centos7 配置https协议</title>
    <link href="http://imcsi.cn/2018/03/23/Centos7-%E9%85%8D%E7%BD%AEhttps%E5%8D%8F%E8%AE%AE/"/>
    <id>http://imcsi.cn/2018/03/23/Centos7-配置https协议/</id>
    <published>2018-03-23T06:20:03.000Z</published>
    <updated>2018-03-26T03:14:56.281Z</updated>
    
    <content type="html"><![CDATA[<p>本文用的是Let’s Encrypt数字证书认证机构免费提供的ssl证书。letsencrypt基于ACME协议自助颁发证书的过程由letsencrypt提供一个工具完成，工具名称现在叫做：certbot，在linux下certbot工具安装后也就是certbot命令。</p><p>1,.安装certbot用于生成证书<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##安装epel-release扩展包</span></span><br><span class="line">yum install epel-release</span><br><span class="line"><span class="comment">##更新yum缓存</span></span><br><span class="line">yum makecache</span><br><span class="line"><span class="comment">##直接yum安装certbot</span></span><br><span class="line">yum install certbot</span><br></pre></td></tr></table></figure></p><p>2.使用certbot申请Let’s Encrypt免费的ssl证书</p><p>配置Let’s Encrypt有两种模式，standalone和webroot。至于两种模式的区别可自行百度一下。我们这里使用的是webroot模式。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##--webroot指定你的网站的根目录</span></span><br><span class="line">certbot certonly --webroot -w /<span class="keyword">var</span>/www/blog -d blog.ibeeasy.cn</span><br></pre></td></tr></table></figure></p><p>对于nginx而言web根目录下的隐藏目录默认情况下是不允许访问的，所以nginx情况下再执行非standalone模式申请ssl证书之前，需要将nginx网站根目录下的.well-known隐藏目录设置成允许访问。</p><p>申请过程中可能会需要输入邮箱接受通知，还有一个同意协议的选项，选y。</p><p>不出意外的话，证书文件会在以下的位置：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/letsencrypt/live/你的域名/</span><br></pre></td></tr></table></figure></p><p>3.配置nginx</p><p>以前我们使用的是80（http）端口，而https协议是443端口，所以我们要将80端口转发到443端口，在你当前网站的配置文件里修改配置如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">listen <span class="number">80</span>;</span><br><span class="line">server_name blog.ibeeasy.cn;</span><br><span class="line">rewrite ^(.*) https:<span class="comment">//$server_name$1 permanent; </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">listen <span class="number">443</span> ssl http2;</span><br><span class="line">server_name  blog.ibeeasy.cn;</span><br><span class="line">   <span class="comment">#告诉浏览器当前页面禁止被frame</span></span><br><span class="line">add_header X-Frame-Options DENY;</span><br><span class="line"><span class="comment">#告诉浏览器不要猜测mime类型</span></span><br><span class="line">add_header X-Content-Type-Options nosniff;</span><br><span class="line"><span class="comment">#证书路径</span></span><br><span class="line">ssl_certificate /etc/letsencrypt/live/blog.ibeeasy.cn/fullchain.pem;</span><br><span class="line"><span class="comment">#私钥路径</span></span><br><span class="line">ssl_certificate_key /etc/letsencrypt/live/blog.ibeeasy.cn/privkey.pem;</span><br><span class="line"><span class="comment">#安全链接可选的加密协议</span></span><br><span class="line">ssl_protocols TLSv1 TLSv1<span class="number">.1</span> TLSv1<span class="number">.2</span>;</span><br><span class="line"><span class="comment">#可选的加密算法,顺序很重要,越靠前的优先级越高.</span></span><br><span class="line">ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-RC4-SHA:!ECDHE-RSA-RC4-SHA:ECDH-ECDSA-RC4-SHA:ECDH-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:HIGH:!RC4-SHA:!aNULL:!eNULL:!LOW:!<span class="number">3</span>DES:!MD5:!EXP:!CBC:!EDH:!kEDH:!PSK:!SRP:!kECDH;</span><br><span class="line"><span class="comment">#在 SSLv3 或 TLSv1 握手过程一般使用客户端的首选算法,如果启用下面的配置,则会使用服务器端的首选算法.</span></span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line"><span class="comment">#储存SSL会话的缓存类型和大小</span></span><br><span class="line">ssl_session_cache shared:SSL:<span class="number">10</span>m;</span><br><span class="line"><span class="comment">#缓存有效期</span></span><br><span class="line">ssl_session_timeout <span class="number">60</span>m;</span><br><span class="line">   <span class="comment">#其他配置照原先的不变，这里就不列出来了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>配置完成后重启Nginx或重新加载配置：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#或重启nginx</span></span><br><span class="line">systemctl restart nginx</span><br><span class="line"><span class="comment">#重新加载配置</span></span><br><span class="line">systemctl reload nginx</span><br></pre></td></tr></table></figure></p><p>至此，https协议就部署完成了，如果还是无法访问，请确定443端口是否开启，或者是否添加安全组443端口的入方向。</p><p>4.添加脚本执行证书更新</p><p>因为ssl证书的有效期是90天，所以我们要设置一个定时任务来自动更新证书，证书更新的命令如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./letsencrypt-auto renew</span><br></pre></td></tr></table></figure></p><p>如果要指定更新某个域名的证书, 则要使用 certonly 参数,：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./letsencrypt-auto certonly --webroot --renew-by-<span class="keyword">default</span> --email admin@ibeeasy.cn -w /<span class="keyword">var</span>/www/blog -d blog.ibeeasy.cn -d a.ibeeasy.cn</span><br></pre></td></tr></table></figure></p><p>当然，官方也提供了 cron 运行脚本的方式可以实现定时续期，脚本如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="comment">#停止 nginx 服务,使用 --standalone 独立服务器验证需要停止当前 web server.</span></span><br><span class="line">systemctl stop nginx</span><br><span class="line"><span class="keyword">if</span> ! /path/to/letsencrypt-auto renew -nvv --standalone &gt; /<span class="keyword">var</span>/log/letsencrypt/renew.log <span class="number">2</span>&gt;&amp;<span class="number">1</span> ; then</span><br><span class="line"><span class="keyword">echo</span> Automated renewal failed:</span><br><span class="line">cat /<span class="keyword">var</span>/log/letsencrypt/renew.log</span><br><span class="line"><span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">fi</span><br><span class="line"><span class="comment">#启动 nginx</span></span><br><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure></p><p>将以上脚本保存为 letsencrypt-renew.sh</p><p>添加可执行权限：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x letsencrypt-renew.sh</span><br></pre></td></tr></table></figure></p><p>编辑 crontab 配置文件或执行<code>crontab -e</code> 添加 cron 任务：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/crontab</span><br></pre></td></tr></table></figure></p><p>我这里设置为每月1号0点执行此脚本.<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#分 时 日 月 星期 执行用户 执行命令</span></span><br><span class="line"> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> *  *   root/脚本目录/letsencrypt-renew.sh</span><br></pre></td></tr></table></figure></p><p>加入后Ctrl+X保存退出即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文用的是Let’s Encrypt数字证书认证机构免费提供的ssl证书。letsencrypt基于ACME协议自助颁发证书的过程由letsencrypt提供一个工具完成，工具名称现在叫做：certbot，在linux下certbot工具安装后也就是certbot命令。&lt;/
      
    
    </summary>
    
      <category term="Linux" scheme="http://imcsi.cn/categories/Linux/"/>
    
    
      <category term="https" scheme="http://imcsi.cn/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>Linux服务器搭建vsftp</title>
    <link href="http://imcsi.cn/2018/03/23/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAvsftp/"/>
    <id>http://imcsi.cn/2018/03/23/Linux服务器搭建vsftp/</id>
    <published>2018-03-23T04:03:16.000Z</published>
    <updated>2018-03-26T03:19:20.074Z</updated>
    
    <content type="html"><![CDATA[<p>之前一直用的是windows下的FlashFXP，现在用的Linux服务器（Centos 7.1），为了方便上传项目，安装vsftpd。</p><p>1.安装vsftpd<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install vsftpd</span><br></pre></td></tr></table></figure></p><p>安装完毕后可以通过启动来测试是否安装完成<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start vsftpd.service</span><br></pre></td></tr></table></figure></p><p>2.创建宿主用户及分配权限</p><p>安装完默认情况下是开启匿名登录的，对应的是 /var/ftp 目录，这时只要服务启动了，就可以直接连上FTP了。而这并不是我们想要的效果，一般都是按照需求来分配用户访问不同的目录。</p><p>新建一个ftp的宿主用户(即存在Linux系统的用户，不是虚拟用户)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">groupadd ftpuser <span class="comment">#创建用户组</span></span><br><span class="line">useradd -g root -M -d /<span class="keyword">var</span>/www -s /sbin/nologin ftpuser</span><br><span class="line"><span class="comment">#创建系统用户分配权限，只用于ftp，所以禁止登陆系统</span></span><br><span class="line">passwd ftpuser <span class="comment">#设置账户密码，这个不是很重要</span></span><br><span class="line"><span class="comment">#此处的ftpuser就是你的账户名</span></span><br><span class="line"></span><br><span class="line">chown -R ftpuser.root /<span class="keyword">var</span>/www</span><br><span class="line"><span class="comment">#把 /var/www 的所有权给ftpuser.root</span></span><br><span class="line"><span class="comment">#这里的 /var/www 就是ftp的根目录，没有的话自行创建，也可以换成其他目录</span></span><br></pre></td></tr></table></figure></p><p>这样就可以通过ftpuser用户连接FTP了。至于虚拟用户需要做的步骤就比较多了。首先虚拟用户的用户认证是通过pam方式去认证的，pam文件里面指定了认证的db文件，db文件又是通过明文用户名和密码文件生成而来，在 /etc/vsftpd/vsftpd.conf 配置文件是通过 pam_service_name=vsftpd 配置指定的，其位置是 /etc/pam.d/vsftpd，编辑该文件，把文件内容全部注释掉，加上以下两行：</p><p>64位系统：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</span><br><span class="line">account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</span><br></pre></td></tr></table></figure></p><p>32位系统：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auth sufficient /lib/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</span><br><span class="line">account sufficient /lib/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</span><br></pre></td></tr></table></figure></p><p>db=/etc/vsftpd/vuser_passwd 指定了db文件的位置，接下来就是生成db文件，由于db文件是通过明文用户名和密码文件生成而来，所以先创建一个保存明文用户名和密码的文件     vuser_passwd.txt<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/vsftpd/vuser_passwd.txt</span><br></pre></td></tr></table></figure></p><p>这个文件的奇数行位账号，偶数行为密码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">beeasy</span><br><span class="line">beeasy1234</span><br></pre></td></tr></table></figure></p><p>保存之后通过以下命令生成db文件：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/vsftpd</span><br><span class="line">db_load -T -t hash -f vuser_passwd.txt vuser_passwd.db</span><br></pre></td></tr></table></figure></p><p>如果 db_load 命令无法使用，那就需要安装db4 包<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install db4</span><br></pre></td></tr></table></figure></p><p>如果要添加新的用户的话，在 vuser_passwd.txt 文件里面继续添加用户密码，但是要再次生成一下db文件。然后现在每个用户的具体配置是通过一个用户对应一个配置文件来实现的，且这个文件必须用FTP用户名去做文件名，建一个目录专门存放这些文件：</p><p>在vsftpd目录下<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir vuser_conf</span><br></pre></td></tr></table></figure></p><p>并且新建文件<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi vuser_conf/beeasy</span><br></pre></td></tr></table></figure></p><p>大致内容如下：</p><p><img src="https://i.imgur.com/mzvPvJe.png" alt=""></p><p>local_root 是指当前虚拟用户的访问目录</p><p>write_enable 设置用户是否可以写入</p><p>anon_upload_enable 设置虚拟用户的上传功能</p><p>anon_mkdir_write_enable 设置虚拟用户创建文件夹的功能</p><p>anon_other_write_enable 设置虚拟用户是否可以执行其他的写入操作，覆盖，删除，重命名等。</p><p>max_per_ip 最多允许同一账户在多少个不同的ip登陆</p><p>3.根据以上的信息来修改vsftpd的配置文件<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=NO <span class="comment"># 禁用匿名登录</span></span><br><span class="line">ascii_upload_enable=YES</span><br><span class="line">ascii_download_enable=YES</span><br><span class="line">chroot_local_user=YES <span class="comment"># 启用限定用户在其主目录下</span></span><br></pre></td></tr></table></figure></p><p>以下配置为自己添加：<br><img src="https://i.imgur.com/3lWKWbB.png" alt=""></p><p>然后重启vsftpd：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart vsftpd.service</span><br></pre></td></tr></table></figure></p><p>若是连接超时，请确认防火墙是否开放vsftpd服务的端口，建议开放20至22号端口以及主动模式PASV下的6000至7000端口。或者在服务器上的安全组里添加入方向的端口。</p><p>以及SElinux是否关闭。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前一直用的是windows下的FlashFXP，现在用的Linux服务器（Centos 7.1），为了方便上传项目，安装vsftpd。&lt;/p&gt;
&lt;p&gt;1.安装vsftpd&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
      <category term="Linux" scheme="http://imcsi.cn/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://imcsi.cn/2018/03/23/hello-world/"/>
    <id>http://imcsi.cn/2018/03/23/hello-world/</id>
    <published>2018-03-23T01:25:30.070Z</published>
    <updated>2018-03-23T01:25:30.070Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
